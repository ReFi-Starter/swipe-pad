---
description: 
globs: 
alwaysApply: false
---
# Commit Message Guidelines

All commit messages must follow the Conventional Commits specification combined with Gitmoji.

## Format

```
<emoji> <type>(<scope>): <message>
```

- **`<emoji>`**: Use a relevant Gitmoji (https://gitmoji.dev/)
- **`<type>`**: Use a valid Conventional Commit type (feat, fix, chore, docs, etc.)
- **`<scope>`**: Describe the affected module, file, or feature (if applicable)
- **`<message>`**: A concise summary of the change in imperative form

## Examples

- ✨ feat(ui): add dark mode support
- 🐛 fix(api): resolve token validation issue
- 📝 docs(readme): update installation instructions
- ♻️ refactor(utils): improve error handling
- 🔧 chore(deps): update dependencies
- 🎨 style(components): format code according to style guide

## Types

- **feat**: A new feature
- **fix**: A bug fix
- **docs**: Documentation only changes
- **style**: Changes that do not affect the meaning of the code
- **refactor**: A code change that neither fixes a bug nor adds a feature
- **perf**: A code change that improves performance
- **test**: Adding missing tests or correcting existing tests
- **build**: Changes that affect the build system or external dependencies
- **ci**: Changes to our CI configuration files and scripts
- **chore**: Other changes that don't modify src or test files
- **revert**: Reverts a previous commit

## Common Gitmojis

- ✨ (`:sparkles:`) - New feature
- 🐛 (`:bug:`) - Bug fix
- 📝 (`:memo:`) - Documentation update
- ♻️ (`:recycle:`) - Refactoring
- 🎨 (`:art:`) - Improve structure/format
- ⚡️ (`:zap:`) - Performance improvement
- 🔧 (`:wrench:`) - Configuration files
- 🔒 (`:lock:`) - Security fixes
- 💄 (`:lipstick:`) - UI/style updates
- ✅ (`:white_check_mark:`) - Add/update tests
